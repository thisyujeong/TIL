(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{568:function(e,t,a){"use strict";a.r(t);var r=a(22),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"type-alias-와-interface-용도-바르게-알고-사용하자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-alias-와-interface-용도-바르게-알고-사용하자"}},[e._v("#")]),e._v(" Type Alias 와 Interface 용도, 바르게 알고 사용하자")]),e._v(" "),a("h2",{attrs:{id:"type-alias-와-interface-의-개념-차이"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-alias-와-interface-의-개념-차이"}},[e._v("#")]),e._v(" Type Alias 와 Interface 의 개념 차이")]),e._v(" "),a("p",[e._v("많은 개발자들이 Type 과 Interface를 섞어 사용하거나 이유없이 사용하는 경우가 많다. 필자 또한 Type Alias 와 Interface 의 개념을 명확하게 이해하지 못했으나 해당 해당 내용을 알고 명확한 용도에 대해 이해할 수 있었다.")]),e._v(" "),a("h3",{attrs:{id:"interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interface"}},[e._v("#")]),e._v(" Interface")]),e._v(" "),a("blockquote",[a("p",[e._v("무언가 상호작용 하기 위해 서로간의 약속/규격사항을 정의하는 것")])]),e._v(" "),a("p",[e._v("의사소통을 할 때 정해진 Interface를 토대로 서로간의 상호작용을 할 수 있도록 돕는 역할을 한다. 쉼게 말해 "),a("strong",[e._v("Interface는 올바르게 구현하는 것을 목적")]),e._v("으로 구현하는 사람이 Interface 를 구현함으로써 동일한 약속/규격 사항을 따라가는 것이다.")]),e._v(" "),a("p",[e._v("즉, 이 Interface 를 통해 어떤 무언가가 구현된다면 Type 이 아닌 Interface를 정의하는 것이 바람직하다.")]),e._v(" "),a("h3",{attrs:{id:"type-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-alias"}},[e._v("#")]),e._v(" Type Alias")]),e._v(" "),a("blockquote",[a("p",[e._v("어떤 데이터를 담을 때, 무슨 데이터를 담을 지 데이터의 타입을 결정하는 것 (데이터의 묘사)")])]),e._v(" "),a("p",[e._v("데이터의 묘사, 어떠한 것을 구현할 목적이 아니라 데이터를 담을 목적이라면 Interface 가 아닌 Type을 사용하는 것이 바람직하다.")])])}),[],!1,null,null,null);t.default=s.exports}}]);